name: basic-integration-tests

on: # yamllint disable-line rule:truthy
  push:
    branches: [main]
    tags:
      - v*

  pull_request:
    branches:
      - main

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  basic-integration-tests:
    runs-on: ubuntu-latest
    needs: [build, bpfman-image-build]
    env:
      XDP_PASS_IMAGE_LOC: quay.io/bpfman-bytecode/xdp_pass:${GITHUB_REF_NAME}
      TC_PASS_IMAGE_LOC: quay.io/bpfman-bytecode/tc_pass:${GITHUB_REF_NAME}
      TRACEPOINT_IMAGE_LOC: quay.io/bpfman-bytecode/tracepoint:${GITHUB_REF_NAME}
      UPROBE_IMAGE_LOC: quay.io/bpfman-bytecode/uprobe:${GITHUB_REF_NAME}
      URETPROBE_IMAGE_LOC: quay.io/bpfman-bytecode/uretprobe:${GITHUB_REF_NAME}
      KPROBE_IMAGE_LOC: quay.io/bpfman-bytecode/kprobe:${GITHUB_REF_NAME}
      KRETPROBE_IMAGE_LOC: quay.io/bpfman-bytecode/kretprobe:${GITHUB_REF_NAME}
      XDP_COUNTER_IMAGE_LOC: quay.io/bpfman-bytecode/go-xdp-counter:${GITHUB_REF_NAME}
      TC_COUNTER_IMAGE_LOC: quay.io/bpfman-bytecode/go-tc-counter:${GITHUB_REF_NAME}
      TRACEPOINT_COUNTER_IMAGE_LOC: quay.io/bpfman-bytecode/go-tracepoint-counter:${GITHUB_REF_NAME}
      FENTRY_IMAGE_LOC: quay.io/bpfman-bytecode/fentry:${GITHUB_REF_NAME}
      FEXIT_IMAGE_LOC: quay.io/bpfman-bytecode/fexit:${GITHUB_REF_NAME}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Checkout bpfman
        uses: actions/checkout@v4

      - name: Download bpfman x86_64 build
        uses: actions/download-artifact@v4
        with:
          name: bpfman-debug-linux-x86_64
          merge-multiple: true

      - name: Unpack binaries
        run: |
          mkdir -p target/debug
          tar -C target/debug -xzvf bpfman-debug-linux-x86_64.tar.gz

      - name: Download Integration Test eBPF
        uses: actions/download-artifact@v4
        with:
          name: bpfman-integration-test
          merge-multiple: true

      - name: Unpack Integration Test eBPF
        run: |
          tar -xzvf integration-test.tar.gz

      - name: Download manpages
        uses: actions/download-artifact@v4
        with:
          name: bpfman-manpages
          merge-multiple: true

      - name: Unpack manpages
        run: |
          tar -xzvf manpages.tar.gz

      - name: Download CLI TAB Completion
        uses: actions/download-artifact@v4
        with:
          name: bpfman-cli-tab-completion
          merge-multiple: true

      - name: Unpack CLI TAB Completion
        run: |
          tar -xzvf cli-tab-completion.tar.gz

      - name: Install libelf-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y linux-headers-`uname -r` clang lldb lld libelf-dev gcc-multilib libbpf-dev

      - name: Generate go wrapped eBPF
        run: |
          cd examples && make generate

      - name: build and push bytecode images to local registry
        run: |


      - name: Run the bpfman installer
        run: sudo ./scripts/setup.sh install

      - name: Verify the bpfman systemd service is active
        run: systemctl is-active bpfman.socket

      - name: Verify the CLI can reach bpfman
        run: sudo bpfman list

      - name: Verify the manpages are installed
        run: man bpfman list

      - name: Stop the bpfman systemd service
        run: |
          sudo systemctl stop bpfman
          sudo ./scripts/setup.sh uninstall

      - name: Run integration tests
        run: cargo xtask integration-test

  coverage:
    needs: [build, build-go]
    runs-on: ubuntu-latest
    steps:
      - name: Download rust coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-rust

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./lcov.info
          verbose: true
