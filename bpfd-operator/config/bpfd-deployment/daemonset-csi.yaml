## This is part of the payload deployed by the bpfd-operator NOT kustomize.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: daemon
  namespace: kube-system
  labels:
    k8s-app: bpfd
spec:
  selector:
    matchLabels:
      name: bpfd-daemon
  template:
    metadata:
      labels:
        name: bpfd-daemon
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: bpfd-daemon
      tolerations:
      # these tolerations are to have the daemonset runnable on control plane nodes
      # remove them if your control plane nodes should not run pods
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      # Specify FS group so that the agent can use the bpfd socket
      # without needing to be root.
      securityContext:
        fsGroup: 2000
      containers:
      - name: bpfd
        image: quay.io/bpfd/bpfd:latest
        args: ["--experimental-csi-support"]
        securityContext:
          privileged: true
        imagePullPolicy: IfNotPresent
        env: 
          - name: RUST_LOG
            valueFrom: 
              configMapKeyRef:
                name: bpfd-config
                key: bpfd.log.level
          - name: KUBE_NODE_NAME 
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
        - name: bpfd-sock
          mountPath: /bpfd-sock
        - name: runtime
          mountPath: /run/bpfd
          mountPropagation: Bidirectional
        - name: bpfd-config 
          mountPath: /etc/bpfd/bpfd.toml
          subPath: bpfd.toml
          readOnly: true
        # This mount is needed to attach tracepoint programs
        - name: host-debug
          mountPath: /sys/kernel/debug
        # Needed to ensure images are persisted to disk across restarts
        - name: bpfd-content-store
          mountPath: /var/lib/bpfd
          mountPropagation: Bidirectional
        # Needed for the aya PIN_BY_NAME feature to function correctly
        - name: default-bpf-fs
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - mountPath: /run/bpfd/csi
          name: socket-dir
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
          name: mountpoint-dir
      - name: bpfd-agent 
        command:
        - /bpfd-agent
        image: quay.io/bpfd/bpfd-agent:latest
        imagePullPolicy: IfNotPresent
        env: 
          - name: KUBE_NODE_NAME 
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: GO_LOG
            valueFrom:
              configMapKeyRef:
                name: bpfd-config
                key: bpfd.agent.log.level
        volumeMounts:
        - name: bpfd-sock
          mountPath: /bpfd-sock
        - name: bpfd-config
          mountPath: /etc/bpfd/bpfd.toml
          subPath: bpfd.toml
          readOnly: true
      - name: node-driver-registrar
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.9.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -rf /registration/csi-bpfd /registration/csi-bpfd-reg.sock"]
        args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-bpfd/csi.sock
        env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      terminationGracePeriodSeconds: 15
      volumes:
      - name: bpfd-sock
        emptyDir: {}
      - name: runtime
        hostPath:
          path: /run/bpfd
      - name: bpfd-config
        configMap:
          name: bpfd-config
          optional: false
      - name: host-debug
        hostPath:
          path: /sys/kernel/debug
      - name: bpfd-content-store
        hostPath:
          path: /var/lib/bpfd
      - name: default-bpf-fs
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # This volume is where the socket for kubelet->driver communication is held
      - hostPath:
          path: /var/lib/kubelet/plugins/csi-bpfd
          type: DirectoryOrCreate
        name: socket-dir
      # This volume is where the driver mounts volumes
      - hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate
        name: mountpoint-dir
      # This volume is where the node-driver-registrar registers the plugin
      # with kubelet
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
        name: registration-dir
